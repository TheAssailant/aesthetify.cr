crystal_doc_search_index_callback({"repository_name":"github.com/TheAssailant/aesthetify.cr","body":"# aesthetify\n\n[![GitHub release](https://img.shields.io/github/release/TheAssailant/aesthetify.cr.svg)](https://github.com/TheAssailant/aesthetify.cr/releases)\n[![Build Status](https://travis-ci.org/TheAssailant/aesthetify.cr.svg?branch=master)](https://travis-ci.org/TheAssailant/aesthetify.cr)\n\naesthetify.cr is a Crystal port of the Ruby gem aesthetify, which makes it\nsimple to take any string and transform it for the ＡＥＳＴＨＥＴＩＣ. In\naddition, it also makes creating Ｆｕｌｌｗｉｄｔｈ text just as simple.\n\naesthetify.cr comes with regular methods just like its Ruby sibling, however it\nomits the bang versions as there isn't support for `String#replace` in Crystal.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  aesthetify:\n    github: TheAssailant/aesthetify.cr\n```\n\n## Usage\n\n```crystal\nrequire \"aesthetify\"\n```\n\nUsing String#aesthetify:\n```crystal\ntext = \"vaporwave\".aesthetify\nputs text\n#=> ＶＡＰＯＲＷＡＶＥ\n```\n\nUsing String#fullwidth:\n```crystal\ntext = \"long boy\".fullwidth\nputs text\n#=> ｌｏｎｇ ｂｏｙ\n```\n\nUsing concatenation:\n```crystal\ntext = \"This is the \" + \"sad boys \".aesthetify + \"club\"\nputs text\n#=> This is the ＳＡＤ ＢＯＹＳ club\n```\n\n## Contributing\n\n1. Fork it ( https://github.com/TheAssailant/aesthetify.cr/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [TheAssailant](https://github.com/TheAssailant)  - creator, maintainer\n","program":{"html_id":"github.com/TheAssailant/aesthetify.cr/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/TheAssailant/aesthetify.cr","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/TheAssailant/aesthetify.cr/Aesthetify","path":"Aesthetify.html","kind":"module","full_name":"Aesthetify","name":"Aesthetify","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"aesthetify/version.cr","line_number":1,"url":"https://github.com/TheAssailant/aesthetify.cr/blob/528efa69028b08e4fe1513a3f803910abf5728a3/src/aesthetify/version.cr"}],"repository_name":"github.com/TheAssailant/aesthetify.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/TheAssailant/aesthetify.cr/String","path":"String.html","kind":"class","full_name":"String","name":"String","abstract":false,"superclass":{"html_id":"github.com/TheAssailant/aesthetify.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/TheAssailant/aesthetify.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/TheAssailant/aesthetify.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/TheAssailant/aesthetify.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"aesthetify.cr","line_number":10,"url":"https://github.com/TheAssailant/aesthetify.cr/blob/528efa69028b08e4fe1513a3f803910abf5728a3/src/aesthetify.cr"}],"repository_name":"github.com/TheAssailant/aesthetify.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/TheAssailant/aesthetify.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"The basic premise is we shift characters into the Fullwidth and Halfwidth\nUnicode character space using simple arithmetic and a 0x0020 (32) character\noffset since the ASCII characters with fullwidth replacements only begin\nshowing up at 0x0021 in Unicode (0x0020 is the space character).\n\nThis code was ported from Ruby and is currently missing the bang versions\nbecause there doesn't exist a `String#replace` method in Crystal yet.","summary":"<p>The basic premise is we shift characters into the Fullwidth and Halfwidth Unicode character space using simple arithmetic and a 0x0020 (32) character offset since the ASCII characters with fullwidth replacements only begin showing up at 0x0021 in Unicode (0x0020 is the space character).</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"aesthetify-instance-method","html_id":"aesthetify-instance-method","name":"aesthetify","doc":"Takes a string and mutates it into a fullwidth uppercase version of that\nstring.","summary":"<p>Takes a string and mutates it into a fullwidth uppercase version of that string.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TheAssailant/aesthetify.cr/blob/528efa69028b08e4fe1513a3f803910abf5728a3/src/aesthetify.cr#L13","def":{"name":"aesthetify","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"output = [] of Char\nchars.each do |letter|\n  if ((33..96).covers?(letter.ord)) || ((123..126).covers?(letter.ord))\n    output << ((letter.ord + 65280) - 32).chr\n  else\n    if (97..122).covers?(letter.ord)\n      output << ((letter.ord + 65280) - 64).chr\n    else\n      output << letter\n    end\n  end\nend\noutput.join\n"}},{"id":"fullwidth-instance-method","html_id":"fullwidth-instance-method","name":"fullwidth","doc":"Takes a string and mutates it into a fullwidth version of that string.","summary":"<p>Takes a string and mutates it into a fullwidth version of that string.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/TheAssailant/aesthetify.cr/blob/528efa69028b08e4fe1513a3f803910abf5728a3/src/aesthetify.cr#L28","def":{"name":"fullwidth","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"output = [] of Char\nchars.each do |letter|\n  if (33..126).covers?(letter.ord)\n    output << ((letter.ord + 65280) - 32).chr\n  else\n    output << letter\n  end\nend\noutput.join\n"}}],"macros":[],"types":[]}]}})